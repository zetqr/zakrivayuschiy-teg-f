/* Опишите в этом файле все keyframes для проекта и стили анимаций иконки Like.

Будьте внимательны! Для корректной работы скриптов на этом сайте нужно, чтобы в HTML некоторые классы были названы особым образом:
✦ theme-dark — класс тёмной темы
✦ theme-light — класс светлой темы
✦ like-icon — для svg-иконки анимированного сердца
✦ card__like-button — для кнопки Like рядом с иконкой
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ is-liked — для обозначения состояния лайкнутой иконки в виде сердца
✦ button__text — для обозначения текстового элемента внутри кнопки

Кроме этого, не меняйте HTML переключателя тем. Его разметка также гарантирует работу своего скрипта.
*/

/* heart animations*/
.like-icon {
  cursor: pointer;
}

.like-icon .sparks {
  opacity: 0;
}

.like-icon .main-body {
  fill: var(--animation-start-color);
  transition: fill 0.3s 0.05s linear;
}

.like-icon .core {
  fill: var(--animation-start-color);
  transition: fill 0.3s linear;
}

/* heart hover animation */


.like-icon:hover .main-body {
  fill: var(--fill-contour-color);

}

.like-icon:hover .core {
  fill: var(--fill-contour-color);

}

.like-icon:not(:hover) .main-body {
  transition-delay: 0s;
}

.like-icon:not(:hover) .core {
  transition-delay: 0.03s;
}


/* heart active animation */

.like-icon:active .main-body,
.like-icon:active .core {
  fill: var(--sparks-color);
}

.like-icon .contour {
  fill: var(--fill-contour-color);
  transition: 0.3s linear;
  transition-delay: 0.06s;
}

.like-icon:active .contour {
  fill: var(--sparks-color);
}

.like-icon.is-liked .main-body,
.like-icon.is-liked .core,
.like-icon.is-liked .contour {
  fill: var(--sparks-color);
}

/* scale animation on click */

.like-icon.is-liked .heart {
  transform-origin: center;
  animation: bigHeart 0.3s ease-in 0.1s alternate;
}

.like-icon.is-liked .sparks {
  transform-origin: center;
  animation: sparks 0.3s ease-in 0.3s alternate;
}

.like-icon:not(.is-liked) .contour {
  fill: var(--fill-contour-color);
  transition: fill 0.1s linear;
}

.like-icon:not(.is-liked) .main-body .core {
  fill: none;
  transition: fill 0.1s linear;
}

@keyframes floatyArrow {
  0% {
    transform: translateX(0px);
  }
  100% {
    transform: translateX(4px);
  }
}

@keyframes bigHeart {
  0% {
    transform: scale(1);
  }

  100% {
    transform: scale(1.5);
  }
}

@keyframes sparks {
  0% {
    fill: var(--sparks-color);
    opacity: 0;
  }
  100% {
    fill: var(--sparks-color);
    opacity: 1;
  }
}

@keyframes changeColors {
  0% {
    filter: hue-rotate(0deg) blur(0);
  }

  50% {
    filter: hue-rotate(120deg) blur(5px) drop-shadow(30px 30px 30px var(--accent-color)) drop-shadow(-30px -30px 30px var(--accent-color)) opacity(.2);
  }

  70% {
    filter: hue-rotate(220deg);
  }

  100% {
    filter: hue-rotate(360deg) blur(0);
  }
}

@keyframes click {
  0% {
    filter: drop-shadow(0 0 10px var(--accent-color)) hue-rotate(0deg);
  }

  15% {
    filter: drop-shadow( 0 0 15px var(--accent-color)) hue-rotate(60deg);
  }

 40% {
    filter: drop-shadow(0 0 10px var(--accent-color)) hue-rotate(160deg);
  }

  60% {
    filter: drop-shadow(0 0 13px var(--accent-color)) hue-rotate(210deg);
  }

  80% {
    filter: drop-shadow(0 0 20px var(--accent-color)) hue-rotate(300deg);
  }

  100% {
    filter: drop-shadow(0 0 15px var(--accent-color)) hue-rotate(360deg);
  }
}
